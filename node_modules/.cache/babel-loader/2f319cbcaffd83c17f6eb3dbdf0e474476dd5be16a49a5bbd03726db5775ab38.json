{"ast":null,"code":"var _jsxFileName = \"/u/css/crumbleydm/VisualGroupWork/src/Components/Label.js\";\nimport Item from \"./Item\";\n/*\n    Define the component Item for a single legend of a key\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Label(_ref) {\n  let {\n    data,\n    scale,\n    current\n  } = _ref;\n  const h = 15;\n  /*\n      Manually define the height step for every single item.\n      It's not good.\n  */\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    transform: `translate(${scale.x.range()[0] * 1.1},${scale.y.range()[1]})`,\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"rect\", {\n      width: \"72\",\n      height: h * Object.keys(data).length,\n      fill: \"none\",\n      stroke: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), Object.keys(data).map((d, i) => /*#__PURE__*/_jsxDEV(Item, {\n      label: d,\n      value: current < 0 ? '' : data[d][current],\n      position: h * i,\n      color: scale.c(d)\n    }, d, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 43\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_c = Label;\nexport default Label;\nvar _c;\n$RefreshReg$(_c, \"Label\");","map":{"version":3,"names":["Item","jsxDEV","_jsxDEV","Label","_ref","data","scale","current","h","transform","x","range","y","children","width","height","Object","keys","length","fill","stroke","fileName","_jsxFileName","lineNumber","columnNumber","map","d","i","label","value","position","color","c","_c","$RefreshReg$"],"sources":["/u/css/crumbleydm/VisualGroupWork/src/Components/Label.js"],"sourcesContent":["import Item from \"./Item\";\n/*\n    Define the component Item for a single legend of a key\n*/\n\nfunction Label({ data, scale,current }) {\n    const h=15;\n    /*\n        Manually define the height step for every single item.\n        It's not good.\n    */\n    return (\n        <g transform={`translate(${scale.x.range()[0]*1.1},${scale.y.range()[1]})`}> {/* positioned the legend at the upper left corner within the coordinates */}\n            <rect width='72' height={h*Object.keys(data).length} fill='none' stroke='black'/>\n            {/*\n                Render a frame for the legend panel.\n                Manually set the size of the rect, which is not good but simplify the code for the homwwork.\n            */}\n            {Object.keys(data).map((d,i)=><Item key={d} label={d} value={current<0?'':data[d][current]} position={h*i} color={scale.c(d)} />)}\n            {/*\n                For each key of the data, render a legend item using the Item component.\n                Pass the label (key), the value of hovering circle (if no circle is hovered, pass a empty string), the y position, and the color to the Item component.\n            */}\n        </g>\n    )\n}\n\nexport default Label;"],"mappings":";AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA;AAIA,SAASC,KAAKA,CAAAC,IAAA,EAA0B;EAAA,IAAzB;IAAEC,IAAI;IAAEC,KAAK;IAACC;EAAQ,CAAC,GAAAH,IAAA;EAClC,MAAMI,CAAC,GAAC,EAAE;EACV;AACJ;AACA;AACA;EACI,oBACIN,OAAA;IAAGO,SAAS,EAAG,aAAYH,KAAK,CAACI,CAAC,CAACC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAC,GAAI,IAAGL,KAAK,CAACM,CAAC,CAACD,KAAK,EAAE,CAAC,CAAC,CAAE,GAAG;IAAAE,QAAA,GAAC,GAAC,eACzEX,OAAA;MAAMY,KAAK,EAAC,IAAI;MAACC,MAAM,EAAEP,CAAC,GAACQ,MAAM,CAACC,IAAI,CAACZ,IAAI,CAAC,CAACa,MAAO;MAACC,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,EAKhFR,MAAM,CAACC,IAAI,CAACZ,IAAI,CAAC,CAACoB,GAAG,CAAC,CAACC,CAAC,EAACC,CAAC,kBAAGzB,OAAA,CAACF,IAAI;MAAS4B,KAAK,EAAEF,CAAE;MAACG,KAAK,EAAEtB,OAAO,GAAC,CAAC,GAAC,EAAE,GAACF,IAAI,CAACqB,CAAC,CAAC,CAACnB,OAAO,CAAE;MAACuB,QAAQ,EAAEtB,CAAC,GAACmB,CAAE;MAACI,KAAK,EAAEzB,KAAK,CAAC0B,CAAC,CAACN,CAAC;IAAE,GAApFA,CAAC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAsF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAKjI;AAEZ;AAACS,EAAA,GApBQ9B,KAAK;AAsBd,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}