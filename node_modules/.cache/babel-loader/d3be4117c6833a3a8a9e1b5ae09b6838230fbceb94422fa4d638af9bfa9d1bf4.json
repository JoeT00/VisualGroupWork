{"ast":null,"code":"var _jsxFileName = \"/u/css/crumbleydm/VisualGroupWork/src/Components/Line.js\";\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Line(_ref) {\n  let {\n    data,\n    scale,\n    label\n  } = _ref;\n  /*\n      *********************************************************************\n      * Define the line using d3.line() for the single line.              *\n      * Applying x scale and y scale completes the following code         *\n      *   const path = d3.line()                                          *\n      *       .x(...)                                                     *\n      *       .y(...)                                                     *\n      *       (data);                                                     *\n      * *******************************************************************\n  */\n  return /*#__PURE__*/_jsxDEV(\"path\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this)\n  /*\n      *****************************************************************************************\n      * Define the line with the following attributes                                         *\n      *   d = {path} - the path, which has been defined earlier                                *\n      *   stroke = {...} - the color, which should be defined by the color scale and label    *\n      *   fill = 'none' -  should explicitly specify no fill for the line                     *\n      *   strokeWidth = '2' - you can customize the width of this line                        *\n      *****************************************************************************************\n  */;\n}\n_c = Line;\nexport default Line;\nvar _c;\n$RefreshReg$(_c, \"Line\");","map":{"version":3,"names":["d3","jsxDEV","_jsxDEV","Line","_ref","data","scale","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/u/css/crumbleydm/VisualGroupWork/src/Components/Line.js"],"sourcesContent":["import * as d3 from 'd3';\n\nfunction Line({ data, scale, label }) {\n    /*\n        *********************************************************************\n        * Define the line using d3.line() for the single line.              *\n        * Applying x scale and y scale completes the following code         *\n        *   const path = d3.line()                                          *\n        *       .x(...)                                                     *\n        *       .y(...)                                                     *\n        *       (data);                                                     *\n        * *******************************************************************\n    */\n    return (\n        <path />\n        /*\n            *****************************************************************************************\n            * Define the line with the following attributes                                         *\n            *   d = {path} - the path, which has been defined earlier                                *\n            *   stroke = {...} - the color, which should be defined by the color scale and label    *\n            *   fill = 'none' -  should explicitly specify no fill for the line                     *\n            *   strokeWidth = '2' - you can customize the width of this line                        *\n            *****************************************************************************************\n        */\n    )\n}\n\nexport default Line;"],"mappings":";AAAA,OAAO,KAAKA,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,IAAIA,CAAAC,IAAA,EAAyB;EAAA,IAAxB;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAAH,IAAA;EAChC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,oBACIF,OAAA;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;EACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IARQ;AAUR;AAACC,EAAA,GAvBQT,IAAI;AAyBb,eAAeA,IAAI;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}